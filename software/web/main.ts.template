import $ from "jquery";

import "bootstrap";

import feather = require("feather-icons");

import * as util from "./ts/util";

{{{module_imports}}}

interface Module {
    init(): any;
    addEventListeners(source: EventSource): any;
}

let modules: Module[] = [{{{modules}}}];

$('.navbar-collapse a').on("click", function () {
    $(".navbar-collapse").collapse('hide');
});


interface Modules {
    {{{module_interface}}}
}

function update_modules(module_init: Modules) {
    for (let m of modules) {
        m.updateLockState(module_init);
    }
}

$(function () {
    feather.replace();

    for (let m of modules) {
        m.init();
    }

    if (!!window.EventSource) {
        let source = new EventSource('/events');

        source.addEventListener('open', function (e) {
            console.log("Events Connected");
        }, false);

        source.addEventListener('error', function (e) {
            if ((<EventSource>e.target).readyState != EventSource.OPEN) {
                console.log("Events Disconnected");
            }
        }, false);

        source.addEventListener('modules', function (e: util.SSE) {
            update_modules(<Modules>(JSON.parse(e.data)));
        }, false);

        for (let m of modules) {
            m.addEventListeners(source);
        }
    }

});
